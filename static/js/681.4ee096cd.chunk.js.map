{"version":3,"file":"static/js/681.4ee096cd.chunk.js","mappings":"4LAIaA,EAAS,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACpB,OACI,SAAC,KAAD,CACAC,YAAY,OACZC,YAAY,IACXC,kBAAkB,OAClBC,MAAM,KACPC,QAASL,GAIhB,C,kHCwDD,UAjEgB,WACZ,OAAoBM,EAAAA,EAAAA,UAAS,IAA7B,eAAMC,EAAN,KAAWC,EAAX,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAON,EAAP,KAAgBS,EAAhB,KACMC,GAASC,EAAAA,EAAAA,MACTC,EAAE,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAQG,QAyBnB,OApBAC,EAAAA,EAAAA,YAAU,WAAI,wCAEV,oGAEOL,GAAY,GAFnB,UAG8BM,EAAAA,EAAAA,IAAkBH,GAHhD,OAGaI,EAHb,OAIOR,EAAQQ,EAASC,SAJxB,gDAQQC,QAAQC,IAAR,MARR,yBAUIV,GAAY,GAVhB,6EAFU,uBAAC,WAAD,wBAedW,EACH,GAAC,CAACR,KAKK,gCACiB,IAAhBL,EAAKc,QAAiBrB,GAGvB,wBACGO,EAAKe,KAAI,SAAAC,GACR,OACE,yBAGI,4BACE,0BACE,iCADF,IACgBA,EAAOC,eAAeC,SAEtC,0BACE,qCADF,IACoBF,EAAOC,eAAeE,aAE1C,0BACE,mCADF,IACkBH,EAAOC,eAAeG,WAG1C,0BACE,qCADF,IACoBJ,EAAOK,eAftBL,EAAOX,GAoBnB,OAzBH,+CA4BJ,SAAC,IAAD,CAAQZ,SAAUA,MAGrB,C,+LClED6B,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMnB,EAAS,CACbA,OAAQ,CACNoB,QALmB,qCASVC,EAAmB,mCAAG,sGACVF,EAAAA,EAAAA,IAAA,qBAAgCnB,GADtB,uBACzBsB,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,EAAAA,EAAAA,IAAA,6BAAgCK,GAASxB,GADjC,uBACvBsB,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBG,EAAiB,mCAAG,WAAMvB,GAAN,yFACRiB,EAAAA,EAAAA,IAAA,gBAAmBjB,GAAMF,GADjB,uBACvBsB,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBI,EAAiB,mCAAG,WAAMxB,GAAN,yFACRiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,YAAiCF,GADzB,uBACvBsB,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBjB,EAAiB,mCAAG,WAAMH,GAAN,yFACRiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,YAAiCF,GADzB,uBACvBsB,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,qD","sources":["components/Loder.jsx","components/Reviews.jsx","components/Servise/API.jsx"],"sourcesContent":["import { RotatingLines } from \"react-loader-spinner\"\n\n\n\nexport const Loader = ({isloding})=>{\n    return(\n        <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n         animationDuration=\"0.75\"\n         width=\"96\"\n        visible={isloding}\n        \n        />\n    )\n}","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { Loader } from \"./Loder\"\nimport { fetchMovieReviews } from \"./Servise/API\"\n\n\nconst Reviews = ()=>{\n    const[cast,setCast]=useState([])\n    const [isloding,setIsloding]= useState(false)\n    const params = useParams()\n    const id = params?.movieId;\n\n   \n    \n\n    useEffect(()=>{\n\n        async function getReviews(){\n            try{\n               setIsloding(true) \n               const response = await fetchMovieReviews(id)\n               setCast(response.results)\n              \n                \n            }catch(error) {\n                console.log(error)\n        }finally{\n            setIsloding(false)\n        }\n    }\n    getReviews()\n},[id])\n\n\n\n    return(\n        <> \n        {cast.length === 0 && !isloding ? (\n        <h3>Review not found!</h3>\n      ) : (\n        <ul>\n          {cast.map(review => {\n            return (\n              <li key={review.id}>\n                \n                \n                  <div>\n                    <p>\n                      <b>Name:</b> {review.author_details.name}\n                    </p>\n                    <p>\n                      <b>Username:</b> {review.author_details.username}\n                    </p>\n                    <p>\n                      <b>Rating:</b> {review.author_details.rating}\n                    </p>\n                  \n                  <p>\n                    <b>Overview:</b> {review.content}\n                  </p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>)}\n\n    <Loader isloding={isloding}/></>\n       \n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nexport const API_KEY = 'b5dbc40d665affe8ed0bac71106b3fa8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n\n  return data;\n};\n\nexport const fetchSearchMovies = async movie => {\n  const { data } = await axios.get(`search/movie?query=${movie}`, params);\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`, params);\n\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, params);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, params);\n\n  return data;\n};"],"names":["Loader","isloding","strokeColor","strokeWidth","animationDuration","width","visible","useState","cast","setCast","setIsloding","params","useParams","id","movieId","useEffect","fetchMovieReviews","response","results","console","log","getReviews","length","map","review","author_details","name","username","rating","content","axios","api_key","fetchTrendingMovies","data","fetchSearchMovies","movie","fetchMovieDetails","fetchMovieCredits"],"sourceRoot":""}