{"version":3,"file":"static/js/597.8f3069fa.chunk.js","mappings":"kOAqEA,UA9DY,WAER,OAAoBA,EAAAA,EAAAA,UAAS,IAA7B,eAAMC,EAAN,KAAWC,EAAX,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAASC,EAAAA,EAAAA,MACTC,EAAE,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAQG,QAuBnB,OAlBAC,EAAAA,EAAAA,YAAU,WAAI,wCACV,sGAEOL,GAAY,GAFnB,UAG4BM,EAAAA,EAAAA,IAAkBH,GAH9C,gBAGcN,EAHd,EAGcA,KACPC,EAAQD,GAJf,gDAQQU,QAAQC,IAAR,MARR,yBAUIR,GAAY,GAVhB,6EADU,uBAAC,WAAD,wBAcdS,EACH,GAAC,CAACN,KAIK,iCACC,wBACEN,EAAKa,KAAI,SAAAC,GACR,OACE,2BACE,gBAAKC,MAAM,QACTC,IAAG,yCAEoCF,EAAMG,cAG7CC,IAAI,MAEN,4BACE,0BACE,kCADF,IACiBJ,EAAMK,SAEvB,0BACE,sCADF,IACqBL,EAAMM,kBAdtBN,EAAMO,UAmBlB,OAGH,SAAC,IAAD,CAAQnB,SAAUA,MAKzB,C,4EC/DYoB,EAAS,SAAC,GAAc,IAAbpB,EAAY,EAAZA,SACpB,OACI,SAAC,KAAD,CACAqB,YAAY,OACZC,YAAY,IACXC,kBAAkB,OAClBV,MAAM,KACPW,QAASxB,GAIhB,C,+LCZDyB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMvB,EAAS,CACbA,OAAQ,CACNwB,QALmB,qCASVC,EAAmB,mCAAG,sGACVF,EAAAA,EAAAA,IAAA,qBAAgCvB,GADtB,uBACzB0B,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,EAAAA,EAAAA,IAAA,6BAAgCK,GAAS5B,GADjC,uBACvB0B,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBG,EAAiB,mCAAG,WAAM3B,GAAN,yFACRqB,EAAAA,EAAAA,IAAA,gBAAmBrB,GAAMF,GADjB,uBACvB0B,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBrB,EAAiB,mCAAG,WAAMH,GAAN,yFACRqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,YAAiCF,GADzB,uBACvB0B,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBI,EAAiB,mCAAG,WAAM5B,GAAN,yFACRqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,YAAiCF,GADzB,uBACvB0B,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,qD","sources":["components/Cast.jsx","components/Loder.jsx","components/Servise/API.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { Loader } from \"./Loder\"\nimport { fetchMovieCredits } from \"./Servise/API\"\n\n\n\nconst Cast =()=>{\n\n    const[cast,setCast]=useState([])\n    const [isloding,setIsloding]= useState(false)\n    const params = useParams()\n    const id = params?.movieId;\n\n\n    \n\n    useEffect(()=>{\n        async function getCast(){\n            try{\n               setIsloding(true) \n               const {cast} = await fetchMovieCredits(id)\n               setCast(cast)\n              \n                \n            }catch(error) {\n                console.log(error)\n        }finally{\n            setIsloding(false)\n        }\n    }\n    getCast()\n},[id])\n\n\n    return(\n        <>  \n         <ul>\n          {cast.map(actor => {\n            return (\n              <li key={actor.credit_id}>\n                <img width=\"150px\"\n                  src={\n                    \n                       `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                   \n                  }\n                  alt=\"\"\n                />\n                <div>\n                  <p>\n                    <b>Actor:</b> {actor.name}\n                  </p>\n                  <p>\n                    <b>Character:</b> {actor.character}\n                  </p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      \n        <Loader isloding={isloding}/>\n        </>\n       \n       \n    )\n}\n\nexport default Cast;","import { RotatingLines } from \"react-loader-spinner\"\n\n\n\nexport const Loader = ({isloding})=>{\n    return(\n        <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n         animationDuration=\"0.75\"\n         width=\"96\"\n        visible={isloding}\n        \n        />\n    )\n}","import axios from \"axios\";\n\nexport const API_KEY = 'b5dbc40d665affe8ed0bac71106b3fa8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n\n  return data;\n};\n\nexport const fetchSearchMovies = async movie => {\n  const { data } = await axios.get(`search/movie?query=${movie}`, params);\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`, params);\n\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, params);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, params);\n\n  return data;\n};"],"names":["useState","cast","setCast","isloding","setIsloding","params","useParams","id","movieId","useEffect","fetchMovieCredits","console","log","getCast","map","actor","width","src","profile_path","alt","name","character","credit_id","Loader","strokeColor","strokeWidth","animationDuration","visible","axios","api_key","fetchTrendingMovies","data","fetchSearchMovies","movie","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}