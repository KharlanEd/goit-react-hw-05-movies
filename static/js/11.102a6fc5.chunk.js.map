{"version":3,"file":"static/js/11.102a6fc5.chunk.js","mappings":"2LAIaA,EAAS,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACpB,OACI,SAAC,KAAD,CACAC,YAAY,OACZC,YAAY,IACXC,kBAAkB,OAClBC,MAAM,KACPC,QAASL,GAIhB,C,+LCZDM,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALmB,qCASVC,EAAmB,mCAAG,sGACVH,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,uBACzBG,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,6BAAgCM,GAASL,GADjC,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,GAAMP,GADjB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBK,EAAiB,mCAAG,WAAMD,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiCP,GADzB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBM,EAAiB,mCAAG,WAAMF,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiCP,GADzB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,qD,sJC9BjBO,EAAY,SAAC,GAQhB,IAAD,cAPLC,UACAC,EAMK,EANLA,YACAC,EAKK,EALLA,eAEAC,EAGK,EAHLA,aACAC,EAEK,EAFLA,SAEK,IADLC,OAAAA,OACK,MADI,GACJ,EAEHC,GAAWC,EAAAA,EAAAA,MACb,OACI,iCACA,SAAC,KAAD,CAAMC,GAAE,UAAEF,EAASG,aAAX,aAAE,EAAgBC,KAA1B,uBACA,gBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,UACA,iBAAKD,UAAWC,EAAAA,EAAAA,eAAhB,WACI,gBAAKC,IAAG,yCAAoCZ,GAAea,IAAKZ,KAEpE,4BACA,wBAAMA,KACN,uCAAeC,MACd,sCACD,uBAAKC,KACJ,oCACD,uBAAIC,EAAOU,KAAI,SAAAC,GAAK,OAAEA,EAAMC,IAAR,IAAcC,KAAK,kBAKvC,SAAC,KAAD,CACCT,MAAO,CAAEC,KAAI,oBAAEJ,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WACxCF,GAAE,OAFF,mBAMA,SAAC,KAAD,CACCC,MAAO,CAAEC,KAAI,oBAAEJ,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WACxCF,GAAE,UAFF,sBAOA,SAAC,KAAD,MAaP,E,kBChBD,MAnCA,WAEA,OAA0BW,EAAAA,EAAAA,UAAS,IAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOrC,EAAP,KAAgBuC,EAAhB,KAEMhC,GAASiC,EAAAA,EAAAA,MACT1B,EAAE,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAQkC,QAoBnB,OAlBIC,EAAAA,EAAAA,YAAU,WAAI,wCAEV,oGAEQH,GAAY,GAFpB,UAG8B1B,EAAAA,EAAAA,IAAkBC,GAHhD,OAGc6B,EAHd,OAIQL,EAASK,GAJjB,gDAOQC,QAAQC,IAAR,MAPR,yBASIN,GAAY,GAThB,6EAFU,uBAAC,WAAD,wBAelBO,EACC,GAAC,CAAChC,KAGC,iBAAKe,UAAWC,EAAAA,EAAAA,UAAhB,WACI,SAACb,EAAD,CAAWC,UAAWN,KACtB,SAAC,IAAD,CAAQZ,SAAUA,MAIzB,C","sources":["components/Loder.jsx","components/Servise/API.jsx","components/MovieInfo.jsx","pages/MovieDetalis.jsx"],"sourcesContent":["import { RotatingLines } from \"react-loader-spinner\"\n\n\n\nexport const Loader = ({isloding})=>{\n    return(\n        <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n         animationDuration=\"0.75\"\n         width=\"96\"\n        visible={isloding}\n        \n        />\n    )\n}","import axios from \"axios\";\n\nexport const API_KEY = 'b5dbc40d665affe8ed0bac71106b3fa8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n\n  return data;\n};\n\nexport const fetchSearchMovies = async movie => {\n  const { data } = await axios.get(`search/movie?query=${movie}`, params);\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`, params);\n\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, params);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, params);\n\n  return data;\n};","import { Link, Outlet, useLocation } from \"react-router-dom\"\nimport css from '../components/styles.module.css'\n\n\n\nexport const MovieInfo = ({\n    movieInfo: {\n    poster_path,\n    original_title,\n   \n    vote_average,\n    overview,\n    genres = [],\n  }}) => {\n\nconst location = useLocation()\n    return (\n        <>\n        <Link to={location.state?.from}>Go Back </Link>\n        <div className={css.container}>\n        <div className={css.container_text}>\n            <img src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={original_title} />\n       \n        <div>\n        <h3>{ original_title}</h3>\n        <p>User score:{vote_average}</p>\n         <h3>Overviem</h3>\n        <p>{ overview}</p>\n         <h3>Genres</h3>\n        <p>{genres.map(gener=>gener.name).join(' | ')}</p>\n        </div> \n        </div>\n        </div>\n       \n        <Link \n         state={{ from: location.state?.from ?? '/movies' }}\n        to={`cast`}>\n                Cast\n        </Link>\n\n        <Link \n         state={{ from: location.state?.from ?? '/movies' }}\n        to={`reviews`}>\n        Reviews\n        </Link>\n        \n      \n        <Outlet/>\n         </>\n\n\n       \n       \n    \n       \n        \n         \n)\n\n\n}\n\n\n\n","// import { getGenres } from \"components/utils/GetGeners\";\nimport { Loader } from \"components/Loder\";\nimport { MovieInfo } from \"components/MovieInfo\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieDetails } from \"../components/Servise/API\";\nimport css from '../components/styles.module.css'\n\n\nfunction MovieDetalis (){\n\nconst [movie, setMovie] = useState([]);\nconst [isloding,setIsloding]= useState(false)\n    \nconst params = useParams()\nconst id = params?.movieId;\n\n    useEffect(()=>{\n       \n        async function getDetalis(){\n            try{\n                setIsloding(true)\n                const results = await fetchMovieDetails(id)\n                setMovie(results)\n                \n            }catch(error) {\n                console.log(error)\n        } finally{\n            setIsloding(false)\n        }\n    \n}\ngetDetalis()\n},[id])\n\nreturn(\n    <div className={css.container} >\n        <MovieInfo movieInfo={movie } />\n        <Loader isloding={isloding}/>\n    </div>\n)\n\n}\n\nexport default MovieDetalis;"],"names":["Loader","isloding","strokeColor","strokeWidth","animationDuration","width","visible","axios","params","api_key","fetchTrendingMovies","data","fetchSearchMovies","movie","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","MovieInfo","movieInfo","poster_path","original_title","vote_average","overview","genres","location","useLocation","to","state","from","className","css","src","alt","map","gener","name","join","useState","setMovie","setIsloding","useParams","movieId","useEffect","results","console","log","getDetalis"],"sourceRoot":""}