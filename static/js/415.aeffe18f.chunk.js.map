{"version":3,"file":"static/js/415.aeffe18f.chunk.js","mappings":"4LAIaA,EAAS,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACpB,OACI,SAAC,KAAD,CACAC,YAAY,OACZC,YAAY,IACXC,kBAAkB,OAClBC,MAAM,KACPC,QAASL,GAIhB,C,+LCZDM,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALmB,qCASVC,EAAmB,mCAAG,sGACVH,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,uBACzBG,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,6BAAgCM,GAASL,GADjC,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,GAAMP,GADjB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBK,EAAiB,mCAAG,WAAMD,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiCP,GADzB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBM,EAAiB,mCAAG,WAAMF,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiCP,GADzB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,qD,oFChCjBO,EAAc,SAAC,GAAY,IAAXC,EAAU,EAAVA,MACvBC,GAAWC,EAAAA,EAAAA,MACb,OACI,0BACA,SAAC,KAAD,CACAC,MAAQ,CAACC,KAAKH,GAEdI,GAAE,kBAAaL,EAAMJ,IAHrB,SAMKI,EAAMM,gBAJNN,EAAMJ,KAQlB,ECbM,SAASW,EAAT,GAAiC,IAAVC,EAAS,EAATA,OAE1B,OACI,wBACGA,EAAOC,KAAI,SAAAT,GAAK,OACf,SAACD,EAAD,CAEAC,MAAOA,GADFA,EAAMJ,GAFI,KAW1B,C,kHCyBD,UAtCA,WAEA,OAA2Bc,EAAAA,EAAAA,UAAS,IAApC,eAAOF,EAAP,KAAcG,EAAd,KACA,GAAiCD,EAAAA,EAAAA,WAAS,GAA1C,eAAOE,EAAP,KAAkBC,EAAlB,KAqBA,OAlBIC,EAAAA,EAAAA,YAAW,WAAI,wCAEX,sGAEQD,GAAY,GAFpB,UAGgCtB,EAAAA,EAAAA,MAHhC,gBAGewB,EAHf,EAGeA,QACPJ,EAAUI,GAJlB,gDAMQC,QAAQC,IAAR,MANR,yBAQIJ,GAAY,GARhB,6EAFW,uBAAC,WAAD,wBAanBK,EAEC,GAAC,KAIE,iCACA,4CACA,SAAC,IAAD,CACIV,OAAQA,KAEZ,SAAC,IAAD,CAAQ1B,SAAU8B,MAMrB,C","sources":["components/Loder.jsx","components/Servise/API.jsx","components/ListTrends.jsx","components/TrendGalery.jsx","pages/Home.jsx"],"sourcesContent":["import { RotatingLines } from \"react-loader-spinner\"\n\n\n\nexport const Loader = ({isloding})=>{\n    return(\n        <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n         animationDuration=\"0.75\"\n         width=\"96\"\n        visible={isloding}\n        \n        />\n    )\n}","import axios from \"axios\";\n\nexport const API_KEY = 'b5dbc40d665affe8ed0bac71106b3fa8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n\n  return data;\n};\n\nexport const fetchSearchMovies = async movie => {\n  const { data } = await axios.get(`search/movie?query=${movie}`, params);\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`, params);\n\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, params);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, params);\n\n  return data;\n};","import { Link, useLocation } from \"react-router-dom\"\n\n\nexport const LstistTrends =({trend}) =>{\nconst location = useLocation()\n    return(\n        <div>\n        <Link\n        state= {{from:location}}\n        key={trend.id}\n        to={`/movies/${trend.id}`}\n        >\n            \n            {trend.original_title}\n        </Link>\n        </div>\n    )\n}","import { LstistTrends } from \"./ListTrends\";\n\n\n\nexport function TrendGalery ({movies}) {\n   \n    return (\n        <ul>\n          {movies.map(trend=>(\n            <LstistTrends\n            key={trend.id}\n            trend={trend}\n            />\n          )\n\n          )}\n\n        </ul>\n    )\n}","import { Loader } from \"components/Loder\";\nimport { fetchTrendingMovies} from \"components/Servise/API\";\nimport { useEffect, useState } from \"react\";\n\nimport{TrendGalery} from '../components/TrendGalery'\n\nfunction  Home() {\n\nconst [movies,setMovies] = useState([])\nconst [isloading, setIsloding] = useState(false);\n\n\n    useEffect (()=>{\n\n        async function getTrend(){\n            try{\n                setIsloding(true)\n                const {results} = await fetchTrendingMovies()\n                setMovies(results)\n            }catch(error) {\n                console.log(error)\n        }finally{\n            setIsloding(false)\n        }\n}\ngetTrend()\n\n},[])\n\n\nreturn(\n    <>  \n    <h2>Trending today</h2>\n    <TrendGalery\n        movies={movies}\n    />\n    <Loader isloding={isloading}/>\n    </>\n  \n)\n\n\n}\n\nexport default Home;"],"names":["Loader","isloding","strokeColor","strokeWidth","animationDuration","width","visible","axios","params","api_key","fetchTrendingMovies","data","fetchSearchMovies","movie","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","LstistTrends","trend","location","useLocation","state","from","to","original_title","TrendGalery","movies","map","useState","setMovies","isloading","setIsloding","useEffect","results","console","log","getTrend"],"sourceRoot":""}